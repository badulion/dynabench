from dynabench.equation import FitzhughNagumoEquation
from dynabench.initial import RandomUniform, Composite
from dynabench.grid import Grid
from dynabench.solver import PyPDESolver

from dynabench.dataset import EquationMovingWindowIterator

import tqdm


# Generate data for the Fitzhugh-Nagumo equation
pde_equation = FitzhughNagumoEquation()
grid = Grid(grid_limits=((0, 64), (0, 64)), grid_size=(64, 64))
intitial = Composite(RandomUniform(), RandomUniform())
solver = PyPDESolver(equation=pde_equation, grid=grid, initial_generator=intitial, parameters={'method': "RK23"})
solver.solve(t_span=[0, 100], dt_eval=1)


# initialize the equation iterator
eq_iterator = EquationMovingWindowIterator(
    data_path = "data/raw/fitzhughnagumo_357b852b_dt_1_trange_0_100_seed_42.h5", # path to the data file, generated by the solver. Might be different for you.
    lookback = 4, 
    rollout = 16,
)


# iterate over the data
for sample in tqdm.tqdm(eq_iterator):
    input_data, target_data, points = sample

# load the whole simulation length. Warning: for large simulations this might be memory intensive
data, points = eq_iterator.get_full_simulation_data()
print(data.shape, points.shape)